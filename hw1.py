# 1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у пользователя несколько чисел
# и строк и сохраните в переменные, выведите на экран.
print("Задание 1")
a = 10
b = "string"
c = 0.5
d = [2, "a", 3.5]

print("a =", a, " b =", b, " c =", c, " d =", d)

month_map = {1: "январь", 2: "февраль", 3: "март", 4: "апрель", 5: "май", 6: "июнь", 7: "июль", 8: "август",
             9: "сентябрь", 10: "октябрь", 11: "ноябрь", 12: "декабрь"}

year_of_birth = int(input("Введите год рождения: "))
month_of_birth = int(input("Введите номер месяца рождения: "))
day_of_birth = int(input("Введите номер дня рождения: "))

first_name = input("Введите Ваше имя: ")
last_name = input("Введите Вашу фамилию: ")

print(f"Здравствуйте, {first_name} {last_name}!")
print(f"Ваш год рождения: {year_of_birth}")
print(f"Ваш месяц рождения: {month_map[month_of_birth]}")
print(f"Ваш день рождения: {day_of_birth}")

# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.
print("Задание 2")
minus = ""
seconds = int(input("Введите время в секундах: "))
if seconds < 0:
    seconds = -seconds
    minus = "-"
print(f"Вы ввели {minus}{seconds // 3600:0>2}:{(seconds % 3600) // 60:0>2}:{(seconds % 3600) % 60:0>2}")

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3.
# Считаем 3 + 33 + 333 = 369.
print("Задание 3")
number = int(input("Введите число: "))
print(f"Получилось: {number + int(str(number) * 2) + int(str(number) * 3)}")

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. Для решения используйте
# цикл while и арифметические операции.
print("Задание 4")
number = int(input("Введите целое положительное число: "))

max_digit = 0

while number > 0:
    if (number % 10) > max_digit:
        max_digit = number % 10
    if max_digit == 9:
        break
    number //= 10

print("Самая большая цифра в числе - ", max_digit)

# 5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает
# фирма (прибыль — выручка больше издержек, или убыток — издержки больше выручки). Выведите соответствующее сообщение.
# Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке). Далее запросите
# численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.
print("Задание 5")
revenue = int(input("Введите размер выручки фирмы: "))
expenses = int(input("Введите размер издержек фирмы: "))

profit = revenue - expenses

if profit > 0:
    print("Фирма получила прибыль")
    print(f"Рентабельность фирмы составила {profit / expenses:.2f}")
    n_workers = int(input("Введите количество сотрудников фирмы: "))
    print(f"Прибыль фирмы в расчёте на одного сотрудника составила {profit / n_workers:.2f}")

elif profit < 0:
    print("Фирма осталась в убытке")
else:
    print("Выручка фирмы равна её издержкам")

# 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. Каждый день
# спортсмен увеличивал результат на 10 % относительно предыдущего. Требуется определить номер дня, на который общий
# результат спортсмена составить не менее b километров. Программа должна принимать значения параметров a и b и выводить
# одно натуральное число — номер дня.
# Например: a = 2, b = 3.
# Результат:
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22
#
# Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.
from math import log, ceil

print("Задание 6")
a = float(input("Введите результат в километрах в первый день: "))
b = float(input("Введите необходимое количество километров: "))

n_day = 1
if a < b:
    if a != 0:
        n_day += ceil(log(b / a, 1.1))
    else:
        n_day = "никогда не настанет"
print("Номер дня:", n_day)
